#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R     &kp T                                                      &kp Y      &kp U  &kp I      &kp O    &kp P
&mt TAB A         &kp S         &kp D         &kp F     &kp G        &kp TAB                        &kp DEL        &kp H      &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V     &kp B        &kp LEFT_SHIFT                 &kp BACKSPACE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp QUESTION
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mkp MB1  &lt 2 SPACE  &lt 5 LANG_ZENKAKUHANKAKU      &mkp MB2       &kp ENTER                             &lt 1 ESC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>, <&inc_dec_kp 0 0>;
        };

        FUNCTION {
            bindings = <
&kp F1            &kp F2        &kp F3        &kp F4    &kp F5                                 &kp F6  &kp F7    &kp F8        &kp F9     &kp F12
&trans            &trans        &trans        &trans    &trans     &kp TAB             &trans  &trans  &trans    &kp UP_ARROW  &trans     &trans
&kp LEFT_SHIFT    &trans        &trans        &trans    &trans     &kp LEFT_SHIFT      &trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mkp MB1  &kp SPACE  &trans              &trans  &trans                                     &trans
            >;
        };

        NUM {
            bindings = <
&trans            &trans        &trans        &trans    &trans                                 &kp N7        &kp N8        &kp N9        &kp SLASH     &kp MINUS
&trans            &trans        &trans        &trans    &trans     &trans      &kp KP_NUMLOCK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &kp PLUS
&kp LEFT_SHIFT    &trans        &trans        &trans    &trans     &trans      &kp N0          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &trans
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mkp MB1  &kp SPACE  &trans      &trans          &trans                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans            &trans        &trans        &trans    &trans                         &trans  &trans  &trans  &kp AT_SIGN    &kp LEFT_BRACKET
&trans            &trans        &trans        &trans    &trans     &trans      &trans  &trans  &trans  &trans  &kp SEMICOLON  &kp RIGHT_BRACKET
&kp LEFT_SHIFT    &trans        &trans        &trans    &trans     &trans      &trans  &trans  &trans  &trans  &kp COLON      &kp BACKSLASH
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mkp MB1  &kp SPACE  &trans      &trans  &trans                                 &kp UNDERSCORE
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
